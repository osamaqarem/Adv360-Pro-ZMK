
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
         &kp CAPS  &kp N1  &kp N2    &kp N3     &kp N4  &kp N5                    &tog 1                                                                              &mo 2  &kp N6           &kp N7               &kp N8   &kp N9                  &kp N0              &none
            &none   &kp Q   &kp W     &kp E      &kp R   &kp T             &kp LG(LS(Z))                                                                              &none   &kp Y            &kp U                &kp I    &kp O                   &kp P           &kp BSLH
            &none   &kp A   &kp S     &kp D      &kp F   &kp G                 &kp LG(Z)      &mo 3           &kp ESC                            &kp ESC      &none   &none   &kp H  &mt RIGHT_ALT J  &mt RIGHT_CONTROL K    &kp L  &mt RIGHT_COMMAND SEMI            &kp SQT
 &kp LEFT_COMMAND   &kp Z   &kp X     &kp C      &kp V   &kp B                     &none      &none  &kp LEFT_COMMAND   &none   &none  &kp RIGHT_COMMAND      &none   &none   &kp N            &kp M            &kp COMMA  &kp DOT                &kp FSLH              &none
            &none   &none   &none  &kp LEFT  &kp RIGHT                    &kp LEFT_SHIFT  &kp SPACE     &kp BACKSPACE                            &kp TAB  &kp ENTER   &mo 3                   &kp UP             &kp DOWN    &none                   &none  &kp RIGHT_CONTROL
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_symbols {
            bindings = <
 &trans  &trans    &trans    &trans       &kp C_VOL_DN              &kp C_VOL_UP              &kp C_PP                                                    &trans         &trans                &trans                 &trans          &trans            &trans  &trans
 &trans  &trans    &trans    &kp UP             &trans      &kp LG(LS(NUMBER_4))            &kp C_PREV                                                  &kp PIPE  &kp AMPERSAND              &kp LBKT               &kp RBKT       &kp CARET    &kp UNDERSCORE  &trans
 &trans  &trans  &kp LEFT  &kp DOWN          &kp RIGHT      &kp LG(LS(NUMBER_5))            &kp C_NEXT  &trans  &trans                  &trans  &trans  &kp EXCL   &kp QUESTION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE   &kp RIGHT_BRACE  &trans
 &trans  &trans    &trans    &trans  &kp LG(LC(SPACE))  &kp LG(LS(LC(NUMBER_4)))                &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans      &kp EQUAL             &kp MINUS               &kp PLUS   &kp LESS_THAN  &kp GREATER_THAN  &trans
 &trans  &trans    &trans    &trans             &trans                                          &trans  &trans  &trans                  &trans  &trans    &trans                            &kp GRAVE        &kp KP_MULTIPLY          &trans            &trans  &trans
            >;
        };

    };
};
